head	1.9;
access;
symbols
	release:1.9.0.2
	release2:1.7
	HobRel1:1.6
	release1:1.6
	start:1.1.1.1
	Klein:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2023.11.03.13.20.14;	author microcookies;	state Exp;
branches;
next	1.8;
commitid	1006544F389A71C29EC;

1.8
date	2023.11.03.13.09.40;	author microcookies;	state Exp;
branches;
next	1.7;
commitid	1006544F111A63BF9CA;

1.7
date	2023.11.03.13.07.36;	author microcookies;	state Exp;
branches;
next	1.6;
commitid	1006544F095A61A96B7;

1.6
date	2023.11.03.12.48.51;	author microcookies;	state Exp;
branches;
next	1.5;
commitid	1006544EC2EA4D86112;

1.5
date	2023.11.03.12.48.12;	author microcookies;	state Exp;
branches;
next	1.4;
commitid	1006544EC07A4C32D72;

1.4
date	2023.11.03.12.45.18;	author microcookies;	state Exp;
branches;
next	1.3;
commitid	1006544EB53A4943EBD;

1.3
date	2023.11.03.12.40.51;	author microcookies;	state Exp;
branches;
next	1.2;
commitid	1006544EA4EA34D6AF1;

1.2
date	2023.11.03.10.04.23;	author microcookies;	state Exp;
branches;
next	1.1;
commitid	1006544C59D562D9B5D;

1.1
date	2023.11.03.09.46.19;	author microcookies;	state Exp;
branches
	1.1.1.1;
next	;
commitid	1006544C1664697742A;

1.1.1.1
date	2023.11.03.09.46.19;	author microcookies;	state Exp;
branches;
next	;
commitid	1006544C1664697742A;


desc
@@


1.9
log
@C23 prepp
@
text
@package tree;

import tree.MyNode;

/**
 * This is a binary search apple-tree. The tree holds integer valued nodes.
 *dsfhdbsjshvfsfv
 * @@author Torbjorn Ekman
 * @@see MyNode
 */
public class CalvinsTree {
  private static String cvsID=”$Id: MyTree.java,v 1.8 2023/11/03 13:09:40 microcookies Exp $”;
  private MyNode root;

  /**
   * Class constructor.
   */
  public CalvinsTree() {
  }

  /**
   * Return a reference to the rykvngkgfdgd
   * vdufhvdfgiyursgr
   * hgtg
   * hfsdfsdsdfsy
   * hvdfvjgdjfvdfbc yh
   * yhj
   * y
   * hjyjyujujhy
   * r
   * oot in this tree.
   *
   * @@return Reference to the root node.
   */
  public MyNode getRoot() {
    return root;
  }

  /**
   * Inserts a node in this tree. The tree is sorted by the node values. If a
   * node with the same node value is already in the tree nothing happens.sdfdsdfsd
   *
   * @@param node The node to insert in this tree.
   * @@return True if node is inserted, false otherwise.
   */
  public boolean insert(MyNode node) {
    if (root == null) {
      root = node;
      return true;
    }
    MyNode iter = root;

    while (true) {
      if (iter.getValue() < node.getValue()) {
        if (iter.getRightChild() != null) {
          iter = iter.getRightChild();
        } else {
          iter.setRightChild(node);
          return true;
        }
      } else if (iter.getValue() > node.getValue()) {
        if (iter.getLeftChild() != null) {
          iter = iter.getLeftChild();
        } else {
          iter.setLeftChild(node);
          return true;
        }
      } else if (iter.getValue() == node.getValue()) {
        return false;
      }
    }
  }

  /**
   * Calculate the number of nodes in this tree. Recursively calculate the
   * number of nodes in this search tree.
   *
   * @@return The total number of nodes.
   */
  public int cardinal() {
    if (root == null) {
      return 0;
    }
    return root.calcSize();
  }
}
@


1.8
log
@sdfffdvfjdv
@
text
@d12 1
a12 1
  private static String cvsID=”$Id: MyTree.java,v 1.7 2023/11/03 13:07:36 microcookies Exp $”;
d25 1
a25 1
   * hy
d41 1
a41 1
   * node with the same node value is already in the tree nothing happens.
@


1.7
log
@heyhifwdyhi
@
text
@d12 1
a12 1
  private static String cvsID=”$Id: MyTree.java,v 1.6 2023/11/03 12:48:51 microcookies Exp $”;
d25 2
a26 3
   * ht
   * h
   * yh
@


1.6
log
@oops wrong
@
text
@d7 1
a7 1
 *
d12 1
a12 1
  private static String cvsID=”$Id: MyTree.java,v 1.5 2023/11/03 12:48:12 microcookies Exp $”;
@


1.5
log
@better name calvin
@
text
@d11 2
a12 2
public class MyTree {
  private static String cvsID=”$Id: MyTree.java,v 1.4 2023/11/03 12:45:18 microcookies Exp $”;
@


1.4
log
@multiline commit
@
text
@d12 1
a12 1
  private static String cvsID=”$Id: MyTree.java,v 1.3 2023/11/03 12:40:51 microcookies Exp $”;
d18 1
a18 1
  public MyTree() {
@


1.3
log
@apple tree?
@
text
@d12 1
a12 1
  private static String cvsID=”$Id: MyTree.java,v 1.2 2023/11/03 10:04:23 microcookies Exp $”;
d22 11
a32 1
   * Return a reference to the root in this tree.
@


1.2
log
@Edit MyNode
@
text
@d6 1
a6 1
 * This is a binary search tree. The tree holds integer valued nodes.
d12 1
a12 1
  private static String cvsID=”$Id$”;
@


1.1
log
@Initial revision
@
text
@d12 1
d31 1
a31 1
   * Inserts a node in this tree. The tree is sorted by the node values.  If a
d38 1
a38 1
    if(root == null) {
d44 3
a46 3
    while(true) {
      if(iter.getValue() < node.getValue()) {
        if(iter.getRightChild() != null) {
d48 1
a48 2
        }
        else {
d52 2
a53 3
      }
      else if(iter.getValue() > node.getValue()) {
        if(iter.getLeftChild() != null) {
d55 1
a55 2
        }
        else {
d59 1
a59 2
      }
      else if(iter.getValue() == node.getValue()) {
d72 1
a72 1
    if(root == null) {
a77 1

@


1.1.1.1
log
@Clavin starting
@
text
@@
